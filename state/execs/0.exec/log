main() {
  Execution directory: /Users/yunhaoyang/Desktop/MGMAE/state/execs/0.exec
  DataManager.loadExamples {
    Reading general {
      Path: evaluator/domains/dbquery/geoquery/1/geoquery.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/geoquery.dlog
        89 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/predicates.dlog
        49 statements
        Parsing evaluator/domains/dbquery/geoquery/1/geobase.dlog
        698 statements
      } [1.4s, cum. 1.4s]
      Path: evaluator/domains/dbquery/geoquery/1/lexicon.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon.dlog
        5 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/lexicon.dlog
        31 statements
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon0.dlog
        5 statements
      }
      Path: /var/folders/96/l9slz8653611_fgty2qxpp9w0000gn/T/tmpekxh8kg4.dlog {
        Parsing /var/folders/96/l9slz8653611_fgty2qxpp9w0000gn/T/tmpekxh8kg4.dlog {
          DatalogParser.loadSafe(): start
          _parse([query], answer(A,(population(B,A),const(B,cityid(sacramento,_))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid("rio grande"))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,highest(B,(state(A),loc(B,A),mountain(B))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,sum(B,state(B),population(B),A))).
          _parse([query], answer(A,(river(A),traverse(A,B),largest(C,(state(B),loc(C,B),city(C),loc(C,D),const(D,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(atlanta,_))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),major(C),river(C)),A))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,(river(A),loc(A,B),state(B),const(B,stateid(indiana))))).
          _parse([query], answer(A,(population(B,A),largest(C,(state(B),area(B,C)))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(montana))))))).
          _parse([query], answer(A,(loc(B,A),const(B,stateid(massachusetts))))).
          _parse([query], answer(A,(state(A),most(A,B,(state(A),loc(B,A),river(B)))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(missouri))),A))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(florida))))).
          _parse([query], answer(A,largest(A,city(A)))).
          _parse([query], answer(A,(loc(B,A),state(A),const(B,placeid("mount mckinley"))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(minnesota)),population(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),most(B,C,(state(B),loc(C,B),city(C)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(wyoming)))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,(population(B,A),smallest(B,(state(B),next_to(B,C),const(C,stateid(wyoming))))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(oklahoma))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(iowa))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(missouri))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(springfield,sd))))).
          _parse([query], answer(A,(major(A),river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),capital(A,B),const(B,cityid(dover,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid("south carolina"))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),state(C),loc(D,C),highest(D,place(D))),A))).
          _parse([query], answer(A,(state(A),const(B,riverid(potomac)),traverse(B,A)))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),smallest(C,state(C))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,count(B,(major(B),city(B)),A))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),river(B),traverse(B,A)))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid("new york"))),A))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid("new york")))))).
          _parse([query], answer(A,(state(A),next_to(B,A),largest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(nebraska))),A))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(ohio))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(montana))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,riverid(red)),river(B)))).
          _parse([query], answer(A,(state(A),loc(B,A),river(B),traverse(B,A)))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(montana)))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),largest(B,state(B))))).
          _parse([query], answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(iowa))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(hawaii))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(hawaii))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(florida))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(delaware))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(indianapolis,_))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(utah))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),state(C)))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),largest(B,state(B)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))).
          _parse([query], answer(A,smallest(B,(state(A),area(A,B),next_to(A,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(high_point(B,A),loc(A,B),state(B),next_to(B,C),const(C,stateid(mississippi))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("new york"))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),const(C,cityid(rochester,_))),A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(area(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,smallest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,largest(A,(state(A),const(B,riverid("rio grande")),traverse(B,A))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(georgia))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),state(B),river(C),loc(C,D),const(D,stateid(virginia)),traverse(C,B)))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(louisiana))))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),smallest(B,state(B)))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(next_to(A,B),state(A),const(B,stateid(michigan))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(state(A),place(B),loc(B,A),higher(B,C),highest(C,(place(C),loc(C,D),const(D,stateid(texas))))))).
          _parse([query], answer(A,longest(A,river(A)))).
          _parse([query], answer(A,lowest(B,(state(A),traverse(C,A),const(C,riverid(mississippi)),loc(B,A),place(B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(illinois))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(utah))))).
          _parse([query], answer(A,smallest(A,(state(A),longest(B,river(B)),traverse(B,A))))).
          _parse([query], answer(A,(area(B,A),const(B,cityid(seattle,_))))).
          _parse([query], answer(A,(lake(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(iowa))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(state(A),loc(B,A),place(B),higher(B,C),highest(C,(place(C),loc(C,D),const(D,stateid(colorado))))))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(state(A),const(B,cityid("des moines",_)),loc(B,A)))).
          _parse([query], answer(A,fewest(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),smallest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("new orleans",_))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,stateid(G,H),const(H,I),const(I)))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),)))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(state(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I))))).
          _parse([query], answer(A,(B,(C,(C,(C,const(C,D),const(D,stateid(D),const(D,E),const(E,F),const(F,stateid(F),const(F,stateid(F,G)))))))))).
          _parse([query], answer(A,(B,(state(B),loc(B,C),const(C,D),const(D,E),const(E,stateid(E)))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,stateid(I),const)))).
          _parse([query], answer(A,(B,(state(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),const)))).
          _parse([query], answer(A,(B,(B),(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(C,(C,(C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J)))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,stateid(C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),))))).
          _parse([query], answer(A,(B,(B),(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J)))).
          _parse([query], answer(A,(B,(B,(B,(B),const(B,stateid(B,C),const(C,D),const(D,stateid(D,E),const(E,F),const(F,stateid(F),const(F))))))))).
          _parse([query], answer(A,(B,(B,A),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I)))).
          _parse([query], answer(A,(state(A,B),const(B,stateid(B),const(B,stateid(B,stateid(B))))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),(F,G),const(G,H),const(H,I),const(I))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,stateid(D),loc(D,E),const(E,F),const(F,G),const(G,stateid(G))))))).
          _parse([query], answer(A,(B,(B),(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),)))).
          _parse([query], answer(A,(B,(C,(C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),const())))).
          _parse([query], answer(A,(B,(B),(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const))).
          _parse([query], answer(A,(B,(B,C),const(C,D),const(D,stateid(D,stateid(D),const(D,E),const(E,stateid(E,F),const(F,stateid(F),const(F,stateid)))))))).
          _parse([query], answer(A,(B,(C,(C,(C),const(C,D),const(D,stateid(D),const(D,E),const(E,stateid(E,stateid(E),const(E,F),const(F,G))))))))).
          _parse([query], answer(A,(B,(B),(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,((A),(A),const(A,stateid(A)))))).
          _parse([query], answer(A,(state(A,B),const(B,stateid(B,stateid(B),const(B,stateid(B,stateid(B)))))))).
          _parse([query], answer(A,(state(A),const(A,B),const(B,stateid(B)))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,stateid(F,G),const(G,H),const(H,I)))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B,const(B,C),const(C,D),const(D,stateid(D,E),const(E,stateid(E),const(E,F),const(F,stateid(F,stateid(F)))))))))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J)))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,stateid(G),const(G,H),))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D),const(D,stateid(D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I)))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B),(B),const(B,C),const(C,D),const(D,E),const(E,stateid(E)))))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,stateid(C,D),const(D,stateid(D),const(D,E),const(E,stateid(E),const(E,F),const(F,))))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(state(A),const(A,stateid(A))))).
          _parse([query], answer(A,((A),const(A,stateid(A))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,stateid(C,D),const(D,E),const(E,F),const(F,stateid(F),const(F,G),const(G,H),const)))))).
          _parse([query], answer(A,(B,(C,(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),const(J,K),)))).
          _parse([query], answer(A,(B,(state(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),const)))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J)))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(C,(C,B),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),)))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,D),const(D,stateid(D)))))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,stateid(F),const(F,G),const(G,stateid(G,H)))))).
          _parse([query], answer(A,(B,(state(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),const)))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(state(A),const(A,B),const(B,stateid(B),))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(state(A),const(A,stateid(A,stateid(A)))))).
          _parse([query], answer(A,(B,(B,const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J))))).
          _parse([query], answer(A,((A,(A),const(A,B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J)))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),const(J)))).
          _parse([query], answer(A,(state(A,B),const(B,stateid(B),loc(B,C),const(C,stateid(C)))))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J)))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,stateid(D,E),const(E,F),const(F,G),const(G,H),const(H,stateid)))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(state(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),const)))).
          _parse([query], answer(A,(B,(state(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),const)))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,stateid(H)))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,stateid(C,D),const(D,E),const(E,stateid(E,F),const(F,stateid(F),const(F,G)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),)))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J)))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D),const(D,E),const(E,stateid(E,F),const(F,G),const(G,stateid(G),const(G,stateid(G,)))))))).
          _parse([query], answer(A,(B,(state(B),loc(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),)))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J)))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),const(J)))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J)))).
          _parse([query], answer(A,(state(A,(A),const(A,stateid(A),const(A,B),const(B,stateid(B),const(B,C),const(C,D),const(D,stateid(D,stateid(D),)))))))).
          _parse([query], answer(A,(B,(B),(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,stateid(C),const(C,D),const(D,stateid(D),const(D,stateid(D),const(D,E),const(E)))))))).
          _parse([query], answer(A,(B,(state(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B),(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,stateid(G),loc(G,H))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(C,(C,B),const(C,D),const(D,E),const(E,stateid(E),const(E,F),const(F,G),const(G,H),const(H,I)))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,((A,(A),const(A,stateid(A)))))).
          _parse([query], answer(A,(B,(state(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I))))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B,(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const())))).
          _parse([query], answer(A,(B,(B),(B),const(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const))).
          _parse([query], answer(A,(B,(state(B,C),const(C,D),const(D,E),const(E,F),const(F,G),const(G,H),const(H,I),const(I,J),const)))).
          DatalogParser.loadSafe(): end
        }
        240 statements
        Example tmpekxh8kg4.dlog:0: query => {[275741count]} | answer(A,(population(B,A),const(B,cityid(sacramento,_))))
        Example tmpekxh8kg4.dlog:1: query => {[3033000length]} | answer(A,(len(B,A),const(B,riverid('rio grande'))))
        Example tmpekxh8kg4.dlog:2: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))
        Example tmpekxh8kg4.dlog:3: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpekxh8kg4.dlog:4: query => {[alaska:stateid/2]} | answer(A,highest(B,(state(A),loc(B,A),mountain(B))))
        Example tmpekxh8kg4.dlog:5: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmpekxh8kg4.dlog:6: query => {[46count]} | answer(A,count(B,(river(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpekxh8kg4.dlog:7: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpekxh8kg4.dlog:8: query => {[225195124count]} | answer(A,sum(B,state(B),population(B),A))
        Example tmpekxh8kg4.dlog:9: query => {[delaware:riverid/2],[hudson:riverid/2],[allegheny:riverid/2]} | answer(A,(river(A),traverse(A,B),largest(C,(state(B),loc(C,B),city(C),loc(C,D),const(D,countryid(usa))))))
        Example tmpekxh8kg4.dlog:10: query => {[425022count]} | answer(A,(population(B,A),const(B,cityid(atlanta,_))))
        Example tmpekxh8kg4.dlog:11: query => {[31count]} | answer(A,count(B,(state(B),next_to(B,C),major(C),river(C)),A))
        Example tmpekxh8kg4.dlog:12: query => {[mckinley:mountainid/2]} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(alaska)))))
        Example tmpekxh8kg4.dlog:13: query => {[wabash:riverid/2],[ohio:riverid/2]} | answer(A,(river(A),loc(A,B),state(B),const(B,stateid(indiana))))
        Example tmpekxh8kg4.dlog:14: query => {[401800count]} | answer(A,(population(B,A),largest(C,(state(B),area(B,C)))))
        Example tmpekxh8kg4.dlog:15: query => {[3901length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(montana))))))
        Example tmpekxh8kg4.dlog:16: query => {[usa:countryid/2]} | answer(A,(loc(B,A),const(B,stateid(massachusetts))))
        Example tmpekxh8kg4.dlog:17: query => {[colorado:stateid/2]} | answer(A,(state(A),most(A,B,(state(A),loc(B,A),river(B)))))
        Example tmpekxh8kg4.dlog:18: query => {[4count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(missouri))),A))
        Example tmpekxh8kg4.dlog:19: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpekxh8kg4.dlog:20: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpekxh8kg4.dlog:21: query => {[georgia:stateid/2],[alabama:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(florida))))
        Example tmpekxh8kg4.dlog:22: query => {[new york_ny:cityid/3]} | answer(A,largest(A,city(A)))
        Example tmpekxh8kg4.dlog:23: query => {[alaska:stateid/2]} | answer(A,(loc(B,A),state(A),const(B,placeid('mount mckinley'))))
        Example tmpekxh8kg4.dlog:24: query => {[minneapolis_mn:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(minnesota)),population(A,B))))
        Example tmpekxh8kg4.dlog:25: query => {[arizona:stateid/2],[nevada:stateid/2],[oregon:stateid/2]} | answer(A,(state(A),next_to(A,B),most(B,C,(state(B),loc(C,B),city(C)))))
        Example tmpekxh8kg4.dlog:26: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpekxh8kg4.dlog:27: query => {[casper_wy:cityid/3]} | answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(wyoming)))))
        Example tmpekxh8kg4.dlog:28: query => {[new york:stateid/2]} | answer(A,largest(B,(state(A),loc(B,A),city(B))))
        Example tmpekxh8kg4.dlog:29: query => {[690767count]} | answer(A,(population(B,A),smallest(B,(state(B),next_to(B,C),const(C,stateid(wyoming))))))
        Example tmpekxh8kg4.dlog:30: query => {[10count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))
        Example tmpekxh8kg4.dlog:31: query => {[lawton_ok:cityid/3],[norman_ok:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(oklahoma))))
        Example tmpekxh8kg4.dlog:32: query => {[2913000count]} | answer(A,(population(B,A),const(B,stateid(iowa))))
        Example tmpekxh8kg4.dlog:33: query => {[435count]} | answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpekxh8kg4.dlog:34: query => {[independence_mo:cityid/3],[springfield_mo:cityid/3],[columbia_mo:cityid/3],[st. joseph_mo:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(missouri))))
        Example tmpekxh8kg4.dlog:35: query => {} | answer(A,(population(B,A),const(B,cityid(springfield,sd))))
        Example tmpekxh8kg4.dlog:36: query => {} | answer(A,(major(A),river(A),loc(A,B),const(B,stateid(texas))))
        Example tmpekxh8kg4.dlog:37: query => {[delaware:stateid/2]} | answer(A,(state(A),capital(A,B),const(B,cityid(dover,_))))
        Example tmpekxh8kg4.dlog:38: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpekxh8kg4.dlog:39: query => {[jefferson city_mo:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[oklahoma city_ok:cityid/3],[jackson_ms:cityid/3],[nashville_tn:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[santa fe_nm:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas))))
        Example tmpekxh8kg4.dlog:40: query => {[8.06e+10length^2]} | answer(A,(area(B,A),const(B,stateid('south carolina'))))
        Example tmpekxh8kg4.dlog:41: query => {[0count]} | answer(A,count(B,(river(B),loc(B,C),state(C),loc(D,C),highest(D,place(D))),A))
        Example tmpekxh8kg4.dlog:42: query => {[west virginia:stateid/2],[virginia:stateid/2],[district of columbia:stateid/2],[maryland:stateid/2]} | answer(A,(state(A),const(B,riverid(potomac)),traverse(B,A)))
        Example tmpekxh8kg4.dlog:43: query => {[638333count]} | answer(A,(population(B,A),capital(B),loc(B,C),smallest(C,state(C))))
        Example tmpekxh8kg4.dlog:44: query => {[947200count]} | answer(A,(population(B,A),const(B,stateid('rhode island'))))
        Example tmpekxh8kg4.dlog:45: query => {[richmond_va:cityid/3],[norfolk_va:cityid/3],[alexandria_va:cityid/3],[portsmouth_va:cityid/3],[newport news_va:cityid/3],[lynchburg_va:cityid/3],[hampton_va:cityid/3],[virginia beach_va:cityid/3],[chesapeake_va:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(virginia))))
        Example tmpekxh8kg4.dlog:46: query => {[279count]} | answer(A,count(B,(major(B),city(B)),A))
        Example tmpekxh8kg4.dlog:47: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),river(B),traverse(B,A)))
        Example tmpekxh8kg4.dlog:48: query => {[3count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid('new york'))),A))
        Example tmpekxh8kg4.dlog:49: query => {[allegheny:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid('new york')))))
        Example tmpekxh8kg4.dlog:50: query => {[nevada:stateid/2],[arizona:stateid/2],[oregon:stateid/2]} | answer(A,(state(A),next_to(B,A),largest(C,(state(B),population(B,C)))))
        Example tmpekxh8kg4.dlog:51: query => {[18count]} | answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(nebraska))),A))
        Example tmpekxh8kg4.dlog:52: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpekxh8kg4.dlog:53: query => {[lakewood_oh:cityid/3],[springfield_oh:cityid/3],[lorain_oh:cityid/3],[kettering_oh:cityid/3],[euclid_oh:cityid/3],[youngstown_oh:cityid/3],[elyria_oh:cityid/3],[parma_oh:cityid/3],[hamilton_oh:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(ohio))))
        Example tmpekxh8kg4.dlog:54: query => {[786700count]} | answer(A,(population(B,A),const(B,stateid(montana))))
        Example tmpekxh8kg4.dlog:55: query => {[louisiana:stateid/2],[texas:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,riverid(red)),river(B)))
        Example tmpekxh8kg4.dlog:56: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(B,A),river(B),traverse(B,A)))
        Example tmpekxh8kg4.dlog:57: query => {[gila:riverid/2],[pecos:riverid/2],[cimarron:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid('new mexico'))))
        Example tmpekxh8kg4.dlog:58: query => {[pecos:riverid/2],[washita:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpekxh8kg4.dlog:59: query => {[granite peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(montana)))))
        Example tmpekxh8kg4.dlog:60: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),const(B,countryid(usa)))))
        Example tmpekxh8kg4.dlog:61: query => {[401800count]} | answer(A,(population(B,A),largest(B,state(B))))
        Example tmpekxh8kg4.dlog:62: query => {[new york:stateid/2]} | answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))
        Example tmpekxh8kg4.dlog:63: query => {[1.01e-04count/length^2]} | answer(A,(density(B,A),const(B,stateid(pennsylvania))))
        Example tmpekxh8kg4.dlog:64: query => {[wisconsin:stateid/2],[south dakota:stateid/2],[minnesota:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[nebraska:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(iowa))))
        Example tmpekxh8kg4.dlog:65: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[san jose_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[long beach_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[citrus heights_ca:cityid/3],[oakland_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[san diego_ca:cityid/3],[los angeles_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[san francisco_ca:cityid/3],[riverside_ca:cityid/3],[fresno_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[anaheim_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[santa ana_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3],[huntington beach_ca:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(california))))
        Example tmpekxh8kg4.dlog:66: query => {[964000count]} | answer(A,(population(B,A),const(B,stateid(hawaii))))
        Example tmpekxh8kg4.dlog:67: query => {[honolulu_hi:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(hawaii))))
        Example tmpekxh8kg4.dlog:68: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example tmpekxh8kg4.dlog:69: query => {[kentucky:stateid/2],[virginia:stateid/2],[mississippi:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[georgia:stateid/2],[missouri:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[arkansas:stateid/2],[north carolina:stateid/2],[florida:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(florida))))
        Example tmpekxh8kg4.dlog:70: query => {[5count]} | answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))
        Example tmpekxh8kg4.dlog:71: query => {[pennsylvania:stateid/2],[new jersey:stateid/2],[maryland:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(delaware))))
        Example tmpekxh8kg4.dlog:72: query => {[indiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid(indianapolis,_))))
        Example tmpekxh8kg4.dlog:73: query => {[baton rouge_la:cityid/3],[santa fe_nm:cityid/3],[oklahoma city_ok:cityid/3],[little rock_ar:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmpekxh8kg4.dlog:74: query => {[salt lake city_ut:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(utah))))
        Example tmpekxh8kg4.dlog:75: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),state(C)))))
        Example tmpekxh8kg4.dlog:76: query => {[anchorage_ak:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),largest(B,state(B)))))
        Example tmpekxh8kg4.dlog:77: query => {[nevada:stateid/2],[utah:stateid/2],[oregon:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[new mexico:stateid/2],[washington:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))
        Example tmpekxh8kg4.dlog:78: query => {[louisiana:stateid/2]} | answer(A,smallest(B,(state(A),area(A,B),next_to(A,C),const(C,stateid(texas)))))
        Example tmpekxh8kg4.dlog:79: query => {[magazine mountain:placeid/2],[cheaha mountain:placeid/2],[clingmans dome:placeid/2],[driskill mountain:placeid/2]} | answer(A,(high_point(B,A),loc(A,B),state(B),next_to(B,C),const(C,stateid(mississippi))))
        Example tmpekxh8kg4.dlog:80: query => {[new jersey:stateid/2],[vermont:stateid/2],[massachusetts:stateid/2],[pennsylvania:stateid/2],[connecticut:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('new york'))))
        Example tmpekxh8kg4.dlog:81: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmpekxh8kg4.dlog:82: query => {[2count]} | answer(A,count(B,(state(B),loc(C,B),const(C,cityid(rochester,_))),A))
        Example tmpekxh8kg4.dlog:83: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpekxh8kg4.dlog:84: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpekxh8kg4.dlog:85: query => {[9.83e+12length^2]} | answer(A,(area(B,A),const(B,countryid(usa))))
        Example tmpekxh8kg4.dlog:86: query => {[scotts valley_ca:cityid/3]} | answer(A,smallest(B,(city(A),population(A,B))))
        Example tmpekxh8kg4.dlog:87: query => {[texas:stateid/2]} | answer(A,largest(A,(state(A),const(B,riverid('rio grande')),traverse(B,A))))
        Example tmpekxh8kg4.dlog:88: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpekxh8kg4.dlog:89: query => {[atlanta_ga:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(georgia))))
        Example tmpekxh8kg4.dlog:90: query => {[fayetteville_nc:cityid/3],[bethesda_md:cityid/3],[alexandria_va:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[silver spring_md:cityid/3],[huntington_wv:cityid/3],[newport news_va:cityid/3],[high point_nc:cityid/3],[charleston_wv:cityid/3],[dundalk_md:cityid/3],[lynchburg_va:cityid/3],[durham_nc:cityid/3],[hampton_va:cityid/3],[chesapeake_va:cityid/3],[roanoke_va:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),state(B),river(C),loc(C,D),const(D,stateid(virginia)),traverse(C,B)))
        Example tmpekxh8kg4.dlog:91: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpekxh8kg4.dlog:92: query => {[435count]} | answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpekxh8kg4.dlog:93: query => {[163length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(louisiana))))))
        Example tmpekxh8kg4.dlog:94: query => {[new mexico:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmpekxh8kg4.dlog:95: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),const(B,stateid(texas)))))
        Example tmpekxh8kg4.dlog:96: query => {[tenleytown:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),smallest(B,state(B)))))
        Example tmpekxh8kg4.dlog:97: query => {[usa:countryid/2],[texas:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(austin,_))))
        Example tmpekxh8kg4.dlog:98: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(next_to(A,B),state(A),const(B,stateid(michigan))))
        Example tmpekxh8kg4.dlog:99: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(california)))))
        Example tmpekxh8kg4.dlog:100: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmpekxh8kg4.dlog:101: query => {[nevada:stateid/2],[utah:stateid/2],[oregon:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[wyoming:stateid/2],[new mexico:stateid/2],[alaska:stateid/2],[washington:stateid/2],[california:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),place(B),loc(B,A),higher(B,C),highest(C,(place(C),loc(C,D),const(D,stateid(texas))))))
        Example tmpekxh8kg4.dlog:102: query => {[missouri:riverid/2]} | answer(A,longest(A,river(A)))
        Example tmpekxh8kg4.dlog:103: query => {[louisiana:stateid/2]} | answer(A,lowest(B,(state(A),traverse(C,A),const(C,riverid(mississippi)),loc(B,A),place(B))))
        Example tmpekxh8kg4.dlog:104: query => {[virginia:stateid/2],[indiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))
        Example tmpekxh8kg4.dlog:105: query => {[waukegan_il:cityid/3],[evanston_il:cityid/3],[peoria_il:cityid/3],[oak lawn_il:cityid/3],[rockford_il:cityid/3],[cicero_il:cityid/3],[champaign_il:cityid/3],[arlington heights_il:cityid/3],[skokie_il:cityid/3],[joliet_il:cityid/3],[springfield_il:cityid/3],[aurora_il:cityid/3],[decatur_il:cityid/3],[elgin_il:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(illinois))))
        Example tmpekxh8kg4.dlog:106: query => {[1461000count]} | answer(A,(population(B,A),const(B,stateid(utah))))
        Example tmpekxh8kg4.dlog:107: query => {[iowa:stateid/2]} | answer(A,smallest(A,(state(A),longest(B,river(B)),traverse(B,A))))
        Example tmpekxh8kg4.dlog:108: query => {[369200000length^2]} | answer(A,(area(B,A),const(B,cityid(seattle,_))))
        Example tmpekxh8kg4.dlog:109: query => {[pontchartrain:lakeid/2]} | answer(A,(lake(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmpekxh8kg4.dlog:110: query => {[wisconsin:stateid/2],[south dakota:stateid/2],[minnesota:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[nebraska:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(iowa))))
        Example tmpekxh8kg4.dlog:111: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmpekxh8kg4.dlog:112: query => {[alaska:stateid/2],[california:stateid/2]} | answer(A,(state(A),loc(B,A),place(B),higher(B,C),highest(C,(place(C),loc(C,D),const(D,stateid(colorado))))))
        Example tmpekxh8kg4.dlog:113: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpekxh8kg4.dlog:114: query => {[iowa:stateid/2]} | answer(A,(state(A),const(B,cityid('des moines',_)),loc(B,A)))
        Example tmpekxh8kg4.dlog:115: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,fewest(A,B,(state(A),next_to(A,B),state(B))))
        Example tmpekxh8kg4.dlog:116: query => {} | answer(A,(state(A),next_to(A,B),smallest(C,(state(B),population(B,C)))))
        Example tmpekxh8kg4.dlog:117: query => {[louisiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('new orleans',_))))
        Example tmpekxh8kg4.dlog:118: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpekxh8kg4.dlog:119: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpekxh8kg4.dlog:122: query => {[Join failed syntactically: {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] and {..}:{[date,stateid/2],[date_day,stateid/2],[time_duration,stateid/2],[count,stateid/2],[date_year,stateid/2],[rank,stateid/2],[date_month,stateid/2],[money/time_duration,stateid/2],[length,stateid/2],[frac,stateid/2],[date_time,stateid/2],[length^2,stateid/2],[name,stateid/2],[count/length^2,stateid/2],[money,stateid/2]}[0] => {}:error]} | answer(A,(state(A),const(A,stateid(A))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
      }
    } [2.1s, cum. 2.1s]
    Randomly splitting 121 general examples
    85 training examples, 36 test examples
  } [2.1s, cum. 2.2s]
  Execution directory: /Users/yunhaoyang/Desktop/MGMAE/state/execs/0.exec
} [2.2s]
